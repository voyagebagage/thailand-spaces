---
import aboutJSON from "../../data/about.json";

interface Props {
  open?: number;
}
const { open } = Astro.props;
---

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const accordion = document.getElementById("acordeon");
    if (!accordion) throw new ReferenceError();

    let currentlyOpen: HTMLElement | null = null;

    accordion.addEventListener("click", (e) => {
      const target = e.target as HTMLElement;
      const header = target.closest("header");
      if (!header) return;

      const content = header.nextElementSibling as HTMLElement;
      const arrow = header.querySelector("img") as HTMLElement;

      if (!content || !arrow) return;

      if (currentlyOpen && currentlyOpen !== content) {
        const openArrow = currentlyOpen.previousElementSibling?.querySelector(
          "img"
        ) as HTMLElement;
        currentlyOpen.style.gridTemplateRows = "0fr";
        openArrow.style.rotate = "0deg";
      }

      if (currentlyOpen === content) {
        currentlyOpen = null;
      } else {
        content.style.gridTemplateRows = "1fr";
        arrow.style.rotate = "90deg";
        currentlyOpen = content;
      }
    });
  });
</script>

<div>
  <ul id="acordeon" class="flex items-center flex-col gap-6">
    {
      aboutJSON.map((e, i) => {
        return (
          <li class="border-neutral-600 border-b-[1px]">
            <header
              class="flex justify-between cursor-pointer [&>*]:pointer-events-none opacity-80 hover:opacity-100"
              data-status={`${i === open ? "enabled" : "disabled"}`}>
              <h3 class="text-lg font-extralight md:text-xl">{e.title}</h3>
              <img
                class="w-8 transition-[rotate]"
                src="public/svg/arrow.svg"
                alt="arrow"
                style={`${i === open ? "rotate : 90deg;" : "rotate : 0deg;"}`}
              />
            </header>
            <div
              class="grid transition-all"
              style={`${
                i === open
                  ? "grid-template-rows: 1fr;"
                  : "grid-template-rows: 0fr;"
              }`}>
              <div class="h-full overflow-hidden">
                <p class="mb-4 pt-2 text-sm opacity-50 md:text-base">
                  {e.description}
                </p>
              </div>
            </div>
          </li>
        );
      })
    }
  </ul>
</div>
